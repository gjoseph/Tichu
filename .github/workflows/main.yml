name: Tichu main build

on:
  push:
    branches: [master]
  pull_request:
    # By default, a workflow only runs when a pull_request's activity type is opened, synchronize, or reopened
    # Here we only run on open, so further pushes do not re-trigger, to avoid completely overloading CI
    # types: [opened]
    # Unfortunately, manual triggers do not propagate to PR checks :|
    # TODO: alternatively, we could branches-ignore: [renovate/**] but that would need to be on the push event?
    branches: [master]
  # Enable manual triggers:
  workflow_dispatch:

jobs:
  build-backend:
    name: Build Backend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Java 11
        uses: actions/setup-java@v2
        with:
          java-version: "11"
          distribution: "temurin"
          cache: "maven"
      - name: Backend Build
        run: ./mvnw clean verify -B -V
  build-clients:
    name: Build Clients/Frontend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./tichu-clients
        # Some of the commands below need this shell setup -- https://github.com/actions/virtual-environments/issues/4#issuecomment-600025775
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v2
      - name: Cache Node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      # Install .nvmrc node version, export NVM_BIN to PATH for further steps
      - run: nvm install && echo "$NVM_BIN" >> $GITHUB_PATH
      # Override npm installed above with version specified in package.json
      - run: ./npm-setup.sh
      # Do our actual business
      - name: Frontend Build
        run: npm install && npm run build
      - name: Storybook Build # Because there may be bugs hiding here (and testing stories isn't something I'll do today)
        run: npm run web-build-storybook
      - name: Frontend Prettier Check
        run: npm run prettier-check-all
